@startuml
title
    RemoteSeServerPlugin
    ObservableReader
    <font size=12>(for an ObservableReader if withReaderObservation() is requested by the user)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
skinparam Shadowing false
skinparam component {
    BorderColor #D4AC0D
    ' Red
    BackgroundColor<<red>> #FDEDEC
    BorderColor<<red>> #E74C3C
    ' Purple
    BackgroundColor<<purple>> #F4ECF7
    BorderColor<<purple>> #8E44AD
    ' blue
    BackgroundColor<<blue>> #EBF5FB
    BorderColor<<blue>> #3498DB
    ' Green
    BackgroundColor<<green>> #E9F7EF
    BorderColor<<green>> #27AE60
    ' Grey
    BackgroundColor<<grey>> #EAECEE
    BorderColor<<grey>> #2C3E50
}
hide <<red>> stereotype
hide <<purple>> stereotype
hide <<blue>> stereotype
hide <<green>> stereotype
hide <<grey>> stereotype

' == CONTENT ==

[SE]
package "App Native SE" {
    [TicketingService] as slave
    package "Keyple" as nativeKeyple {
        [ObservableReader] <<blue>>
        [NativeSeClientService] <<green>>
        [KeypleClientSyncNode] <<red>>
        [KeypleAsyncNode] as nativeAsyncNode <<purple>>
    }
    [KeypleSyncMessageSender] <<red>>
    [KeypleAsyncMessageSender] as nativeAsyncSender <<purple>>
}
package "App Virtual SE" {
    [RemoteTicketingService] as master
    package "Keyple" as virtualKeyple {
        [RemoteSeServerObservableReader] <<blue>>
        [RemoteSeServerPlugin] <<green>>
        [KeypleServerSyncNode] <<red>>
        [KeypleAsyncNode] as virtualAsyncNode <<purple>>
    }
    [Controller] <<red>>
    [KeypleAsyncMessageSender] as virtualAsyncSender <<purple>>
}

'utilisation
slave <-up- start
[ObservableReader] -left-> [SE]
[SE] .right.> [ObservableReader] #Blue : <color:blue>SE Event
slave --> [ObservableReader]
[ObservableReader] .up.> slave #Blue : <color:blue>SE Event
slave --> [NativeSeClientService]
[NativeSeClientService] -left-> [ObservableReader]
[ObservableReader] .right.> [NativeSeClientService] #Blue : <color:blue>SE Event
[NativeSeClientService] <--> [KeypleClientSyncNode]
[NativeSeClientService] <--> nativeAsyncNode
[KeypleClientSyncNode] --> [KeypleSyncMessageSender]
nativeAsyncNode <--> nativeAsyncSender

master --> [RemoteSeServerObservableReader]
[RemoteSeServerObservableReader] .up.> master #Blue : <color:blue>SE Event
master --> [RemoteSeServerPlugin]
[RemoteSeServerPlugin] .up.> master #Green : <color:green>Reader\n<color:green>Connected\n<color:green>Event
[RemoteSeServerPlugin] -> [RemoteSeServerObservableReader]
[RemoteSeServerPlugin] <--> [KeypleServerSyncNode]
[RemoteSeServerPlugin] <--> virtualAsyncNode
[RemoteSeServerObservableReader] <--> virtualAsyncNode
[RemoteSeServerObservableReader] <--> [KeypleServerSyncNode]
[Controller] -up-> [KeypleServerSyncNode]
virtualAsyncSender <-up-> virtualAsyncNode

[KeypleSyncMessageSender] -> [Controller]
nativeAsyncSender <-> virtualAsyncSender

' == LAYOUT ==
[KeypleSyncMessageSender] -[hidden]- nativeAsyncSender
[Controller] -[hidden]- virtualAsyncSender
nativeAsyncNode -[hidden]right- [KeypleClientSyncNode]
[KeypleServerSyncNode] -[hidden]right- virtualAsyncNode

@enduml